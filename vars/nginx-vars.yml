---
nginx_remove_default_vhost: true

nginx_vhosts:
  - listen: "80"
    server_name: "medusa.trmn.ka8zrt.com"
    root: "/var/www/html/public"
    index: "index.php"
    access_log: "/var/log/nginx/medusa_access.log"
    error_log: "/var/log/nginx/medusa_error.log"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "medusa.conf"
    extra_parameters: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      # Very rarely should these ever be accessed outside of your lan
      location ~* \.(txt|log)$ {
          allow 192.168.8.0/24;
          deny all;
      }

      location ~ \..*/.*\.php$ {
          return 403;
      }

      location ~ ^/sites/.*/private/ {
          return 403;
      }

      # Allow "Well-Known URIs" as per RFC 5785
      location ~* ^/.well-known/ {
          allow all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
          return 403;
      }

      location / {
          # try_files $uri @rewrite; # For Drupal <= 6
          try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
          deny all;
          return 404;
      }

      location ~ '\.php$|^/update.php' {
          fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
          # Security note: If you're running a version of PHP older than the
          # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
          # See http://serverfault.com/q/627903/94922 for details.
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_intercept_errors on;
          fastcgi_pass unix:/var/opt/remi/php74/run/php-fpm/socket;
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
          try_files $uri @rewrite;
      }

      # Handle private files through Drupal.
      location ~ ^/system/files/ { # For Drupal >= 7
          try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php?$query_string @rewrite;
          expires max;
          log_not_found off;
      }

  - listen: "80"
    server_name: "medusa74.trmn.ka8zrt.com"
    root: "/var/www/html/public"
    index: "index.php"
    access_log: "/var/log/nginx/medusa74_access.log"
    error_log: "/var/log/nginx/medusa74_error.log"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "medusa74.conf"
    extra_parameters: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      # Very rarely should these ever be accessed outside of your lan
      location ~* \.(txt|log)$ {
          allow 192.168.8.0/24;
          deny all;
      }

      location ~ \..*/.*\.php$ {
          return 403;
      }

      location ~ ^/sites/.*/private/ {
          return 403;
      }

      # Allow "Well-Known URIs" as per RFC 5785
      location ~* ^/.well-known/ {
          allow all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
          return 403;
      }

      location / {
          # try_files $uri @rewrite; # For Drupal <= 6
          try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
          deny all;
          return 404;
      }

      location ~ '\.php$|^/update.php' {
          fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
          # Security note: If you're running a version of PHP older than the
          # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
          # See http://serverfault.com/q/627903/94922 for details.
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_intercept_errors on;
          fastcgi_pass unix:/var/opt/remi/php74/run/php-fpm/socket;
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
          try_files $uri @rewrite;
      }

      # Handle private files through Drupal.
      location ~ ^/system/files/ { # For Drupal >= 7
          try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php?$query_string @rewrite;
          expires max;
          log_not_found off;
      }

  - listen: "80"
    server_name: "medusa80.trmn.ka8zrt.com"
    root: "/var/www/html/public"
    index: "index.php"
    access_log: "/var/log/nginx/medusa80_access.log"
    error_log: "/var/log/nginx/medusa80_error.log"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "medusa80.conf"
    extra_parameters: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      # Very rarely should these ever be accessed outside of your lan
      location ~* \.(txt|log)$ {
          allow 192.168.8.0/24;
          deny all;
      }

      location ~ \..*/.*\.php$ {
          return 403;
      }

      location ~ ^/sites/.*/private/ {
          return 403;
      }

      # Allow "Well-Known URIs" as per RFC 5785
      location ~* ^/.well-known/ {
          allow all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
          return 403;
      }

      location / {
          # try_files $uri @rewrite; # For Drupal <= 6
          try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
          deny all;
          return 404;
      }

      location ~ '\.php$|^/update.php' {
          fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
          # Security note: If you're running a version of PHP older than the
          # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
          # See http://serverfault.com/q/627903/94922 for details.
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_intercept_errors on;
          fastcgi_pass unix:/var/opt/remi/php80/run/php-fpm/socket;
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
          try_files $uri @rewrite;
      }

      # Handle private files through Drupal.
      location ~ ^/system/files/ { # For Drupal >= 7
          try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php?$query_string @rewrite;
          expires max;
          log_not_found off;
      }

  - listen: "80"
    server_name: "medusa81.trmn.ka8zrt.com"
    root: "/var/www/html/public"
    index: "index.php"
    access_log: "/var/log/nginx/medusa81_access.log"
    error_log: "/var/log/nginx/medusa81_error.log"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "medusa81.conf"
    extra_parameters: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      # Very rarely should these ever be accessed outside of your lan
      location ~* \.(txt|log)$ {
          allow 192.168.8.0/24;
          deny all;
      }

      location ~ \..*/.*\.php$ {
          return 403;
      }

      location ~ ^/sites/.*/private/ {
          return 403;
      }

      # Allow "Well-Known URIs" as per RFC 5785
      location ~* ^/.well-known/ {
          allow all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
          return 403;
      }

      location / {
          # try_files $uri @rewrite; # For Drupal <= 6
          try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
          deny all;
          return 404;
      }

      location ~ '\.php$|^/update.php' {
          fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
          # Security note: If you're running a version of PHP older than the
          # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
          # See http://serverfault.com/q/627903/94922 for details.
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_intercept_errors on;
          fastcgi_pass unix:/var/opt/remi/php81/run/php-fpm/socket;
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
          try_files $uri @rewrite;
      }

      # Handle private files through Drupal.
      location ~ ^/system/files/ { # For Drupal >= 7
          try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php?$query_string @rewrite;
          expires max;
          log_not_found off;
      }

  - listen: "80"
    server_name: "medusa82.trmn.ka8zrt.com"
    root: "/var/www/html/public"
    index: "index.php"
    access_log: "/var/log/nginx/medusa82_access.log"
    error_log: "/var/log/nginx/medusa82_error.log"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "medusa82.conf"
    extra_parameters: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      # Very rarely should these ever be accessed outside of your lan
      location ~* \.(txt|log)$ {
          allow 192.168.8.0/24;
          deny all;
      }

      location ~ \..*/.*\.php$ {
          return 403;
      }

      location ~ ^/sites/.*/private/ {
          return 403;
      }

      # Allow "Well-Known URIs" as per RFC 5785
      location ~* ^/.well-known/ {
          allow all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
          return 403;
      }

      location / {
          # try_files $uri @rewrite; # For Drupal <= 6
          try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
          deny all;
          return 404;
      }

      location ~ '\.php$|^/update.php' {
          fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
          # Security note: If you're running a version of PHP older than the
          # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
          # See http://serverfault.com/q/627903/94922 for details.
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_intercept_errors on;
          fastcgi_pass unix:/var/opt/remi/php82/run/php-fpm/socket;
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
          try_files $uri @rewrite;
      }

      # Handle private files through Drupal.
      location ~ ^/system/files/ { # For Drupal >= 7
          try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php?$query_string @rewrite;
          expires max;
          log_not_found off;
      }

  - listen: "80"
    server_name: "medusa83.trmn.ka8zrt.com"
    root: "/var/www/html/public"
    index: "index.php"
    access_log: "/var/log/nginx/medusa83_access.log"
    error_log: "/var/log/nginx/medusa83_error.log"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "medusa83.conf"
    extra_parameters: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }

      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }

      # Very rarely should these ever be accessed outside of your lan
      location ~* \.(txt|log)$ {
          allow 192.168.8.0/24;
          deny all;
      }

      location ~ \..*/.*\.php$ {
          return 403;
      }

      location ~ ^/sites/.*/private/ {
          return 403;
      }

      # Allow "Well-Known URIs" as per RFC 5785
      location ~* ^/.well-known/ {
          allow all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
          return 403;
      }

      location / {
          # try_files $uri @rewrite; # For Drupal <= 6
          try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
          deny all;
          return 404;
      }

      location ~ '\.php$|^/update.php' {
          fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
          # Security note: If you're running a version of PHP older than the
          # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
          # See http://serverfault.com/q/627903/94922 for details.
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_intercept_errors on;
          fastcgi_pass unix:/var/opt/remi/php83/run/php-fpm/socket;
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
          try_files $uri @rewrite;
      }

      # Handle private files through Drupal.
      location ~ ^/system/files/ { # For Drupal >= 7
          try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php?$query_string @rewrite;
          expires max;
          log_not_found off;
      }
